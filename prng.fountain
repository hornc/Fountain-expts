// Goal ::= <. steps = 0 .> { Shift<a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p> #10 <. steps += 1 .> } <. steps > 7 .>;

Goal ::=
    To16BitArray<seed,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p>
    #10
    "seed in hex is: "
    Hex<a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p>
    #10
    // "bitshift left by 7: "
    // LS7<a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p>
    Hex<a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p>
;

To16BitArray<val,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p> ::=
    <. a = val .> Lsb<a>
    Div2<val>
    <. b = val .> Lsb<b>
    Div2<val>
    <. c = val .> Lsb<c>
    Div2<val>
    <. d = val .> Lsb<d>
    Div2<val>
    <. e = val .> Lsb<e>
    Div2<val>
    <. f = val .> Lsb<f>
    Div2<val>
    <. g = val .> Lsb<g>
    Div2<val>
    <. h = val .> Lsb<h>
    Div2<val>
    <. i = val .> Lsb<i>
    Div2<val>
    <. j = val .> Lsb<j>
    Div2<val>
    <. k = val .> Lsb<k>
    Div2<val>
    <. l = val .> Lsb<l>
    Div2<val>
    <. m = val .> Lsb<m>
    Div2<val>
    <. n = val .> Lsb<n>
    Div2<val>
    <. o = val .> Lsb<o>
    Div2<val>
    <. p = val .> Lsb<p>
;


// Divide a by 2, result is an int
Div2<a> ::=
    <. a = 0 .> ""
  | <. a > 0 .> <. b = a .> { "" <. b -= 2 .> <. a -= 1 .> } <. b < 1 .>
;

// Mult a by 2
Mul2<a> ::= <. a += a .> "";

// Return least significant bit of a (result overwrites a)
Lsb<a> ::=
    <. a = 0 .> ""
  | <. a = 1 .> ""
  | <. a > 1 .> <. c = a .> Div2<c> Mul2<c> <. a -= c .>
;



Shift<a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p> ::= "0x" Hex<m,n,o,p> Hex<i,j,k,l> Hex<e,f,g,h> Hex<a,b,c,d> LS8<a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p>;

Xor<a, b> ::= <. a = b .> "False" | "True";

Xor16<a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,aa,bb,cc,dd,ee,ff,gg,hh,ii,jj,kk,ll,mm,nn,oo,pp> ::= ;

// http://www.retroprogramming.com/2017/07/xorshift-pseudorandom-numbers-in-z80.html

XS<a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p> ::= ;

LS7<a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p> ::= <. repeat = 0 .> { LS<a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p> <. repeat += 1 .> } <. repeat > 6 .> ;
RS9<a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p> ::= <. repeat = 0 .> { RS<a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p> <. repeat += 1 .> } <. repeat > 8 .> ;
LS8<a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p> ::= <. repeat = 0 .> { LS<a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p> <. repeat += 1 .> } <. repeat > 7 .> ;

RS<a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p> ::=
 <. a = 1 .> <. b = 0 .> "" <. a -= 1 .> |
 <. a = 0 .> <. b = 1 .> "" <. a += 1 .> 
 <. b = 1 .> <. c = 0 .> "" <. b -= 1 .> |
 <. b = 0 .> <. c = 1 .> "" <. b += 1 .>
 <. c = 1 .> <. d = 0 .> "" <. c -= 1 .> |
 <. c = 0 .> <. d = 1 .> "" <. c += 1 .>
 <. d = 1 .> <. e = 0 .> "" <. d -= 1 .> |
 <. d = 0 .> <. e = 1 .> "" <. d += 1 .>
 <. e = 1 .> <. f = 0 .> "" <. e -= 1 .> |
 <. e = 0 .> <. f = 1 .> "" <. e += 1 .>
 <. f = 1 .> <. g = 0 .> "" <. f -= 1 .> |
 <. f = 0 .> <. g = 1 .> "" <. f += 1 .>
 <. g = 1 .> <. h = 0 .> "" <. g -= 1 .> |
 <. g = 0 .> <. h = 1 .> "" <. g += 1 .>
 <. h = 1 .> <. i = 0 .> "" <. h -= 1 .> |
 <. h = 0 .> <. i = 1 .> "" <. h += 1 .>
 <. i = 1 .> <. j = 0 .> "" <. i -= 1 .> |
 <. i = 0 .> <. j = 1 .> "" <. i += 1 .>
 <. j = 1 .> <. k = 0 .> "" <. j -= 1 .> |
 <. j = 0 .> <. k = 1 .> "" <. j += 1 .>
 <. k = 1 .> <. l = 0 .> "" <. k -= 1 .> |
 <. k = 0 .> <. l = 1 .> "" <. k += 1 .>
 <. l = 1 .> <. m = 0 .> "" <. l -= 1 .> |
 <. l = 0 .> <. m = 1 .> "" <. l += 1 .>
 <. m = 1 .> <. n = 0 .> "" <. m -= 1 .> |
 <. m = 0 .> <. n = 1 .> "" <. m += 1 .>
 <. n = 1 .> <. o = 0 .> "" <. n -= 1 .> |
 <. n = 0 .> <. o = 1 .> "" <. n += 1 .>
 <. o = 1 .> <. p = 0 .> "" <. o -= 1 .> |
 <. o = 0 .> <. p = 1 .> "" <. o += 1 .>
 <. p = 1 .> "" <. p -= 1 .> 
;

LS<a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p> ::=
 <. p = 1 .> <. o = 0 .> "" <. p -= 1 .> |
 <. p = 0 .> <. o = 1 .> "" <. p += 1 .> 
 <. o = 1 .> <. n = 0 .> "" <. o -= 1 .> |
 <. o = 0 .> <. n = 1 .> "" <. o += 1 .>
 <. n = 1 .> <. m = 0 .> "" <. n -= 1 .> |
 <. n = 0 .> <. m = 1 .> "" <. n += 1 .>
 <. m = 1 .> <. l = 0 .> "" <. m -= 1 .> |
 <. m = 0 .> <. l = 1 .> "" <. m += 1 .>
 <. l = 1 .> <. k = 0 .> "" <. l -= 1 .> |
 <. l = 0 .> <. k = 1 .> "" <. l += 1 .>
 <. k = 1 .> <. j = 0 .> "" <. k -= 1 .> |
 <. k = 0 .> <. j = 1 .> "" <. k += 1 .>
 <. j = 1 .> <. i = 0 .> "" <. j -= 1 .> |
 <. j = 0 .> <. i = 1 .> "" <. j += 1 .>
 <. i = 1 .> <. h = 0 .> "" <. i -= 1 .> |
 <. i = 0 .> <. h = 1 .> "" <. i += 1 .>
 <. h = 1 .> <. g = 0 .> "" <. h -= 1 .> |
 <. h = 0 .> <. g = 1 .> "" <. h += 1 .>
 <. g = 1 .> <. f = 0 .> "" <. g -= 1 .> |
 <. g = 0 .> <. f = 1 .> "" <. g += 1 .>
 <. f = 1 .> <. e = 0 .> "" <. f -= 1 .> |
 <. f = 0 .> <. e = 1 .> "" <. f += 1 .>
 <. e = 1 .> <. d = 0 .> "" <. e -= 1 .> |
 <. e = 0 .> <. d = 1 .> "" <. e += 1 .>
 <. d = 1 .> <. c = 0 .> "" <. d -= 1 .> |
 <. d = 0 .> <. c = 1 .> "" <. d += 1 .>
 <. c = 1 .> <. b = 0 .> "" <. c -= 1 .> |
 <. c = 0 .> <. b = 1 .> "" <. c += 1 .>
 <. b = 1 .> <. a = 0 .> "" <. b -= 1 .> |
 <. b = 0 .> <. a = 1 .> "" <. b += 1 .>
 <. a = 1 .> "" <. a -= 1 .> 
;


Hex<a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p> ::=
    "0x" Nibble<m,n,o,p> Nibble<i,j,k,l> Nibble<e,f,g,h> Nibble<a,b,c,d>
;


Nibble<a,b,c,d> ::=
 <. a = 0 .> <. b = 0 .> <. c = 0 .> <. d = 0 .> "0" |
 <. a = 1 .> <. b = 0 .> <. c = 0 .> <. d = 0 .> "1" |
 <. a = 0 .> <. b = 1 .> <. c = 0 .> <. d = 0 .> "2" |
 <. a = 1 .> <. b = 1 .> <. c = 0 .> <. d = 0 .> "3" |
 <. a = 0 .> <. b = 0 .> <. c = 1 .> <. d = 0 .> "4" |
 <. a = 1 .> <. b = 0 .> <. c = 1 .> <. d = 0 .> "5" |
 <. a = 0 .> <. b = 1 .> <. c = 1 .> <. d = 0 .> "6" |
 <. a = 1 .> <. b = 1 .> <. c = 1 .> <. d = 0 .> "7" |
 <. a = 0 .> <. b = 0 .> <. c = 0 .> <. d = 1 .> "8" |
 <. a = 1 .> <. b = 0 .> <. c = 0 .> <. d = 1 .> "9" |
 <. a = 0 .> <. b = 1 .> <. c = 0 .> <. d = 1 .> "A" |
 <. a = 1 .> <. b = 1 .> <. c = 0 .> <. d = 1 .> "B" |
 <. a = 0 .> <. b = 0 .> <. c = 1 .> <. d = 1 .> "C" |
 <. a = 1 .> <. b = 0 .> <. c = 1 .> <. d = 1 .> "D" |
 <. a = 0 .> <. b = 1 .> <. c = 1 .> <. d = 1 .> "E" |
 <. a = 1 .> <. b = 1 .> <. c = 1 .> <. d = 1 .> "F" ;

